{"version":3,"file":"static/js/496.349d930a.chunk.js","mappings":"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","sources":["components/services/moviesAPI/fetchMovies.js","components/services/moviesAPI/status.js","webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b0417ce4f13258c76c4f7fdc636d5dbb';\nconst TRENDS = '/trending/movie/week';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/';\nconst CAST = '/credits';\nconst REWIEWS = '/reviews';\n\nexport async function fetchTrendingMovies(page = 1) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${TRENDS}?${params}`);\n  return data;\n}\n\nexport async function fetchSearchMovie(searchText, page = 1) {\n  const params = new URLSearchParams({\n    query: searchText,\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${SEARCH}?${params}`);\n  return data;\n}\nexport async function fetchMovie(id) {\n  const params = new URLSearchParams({\n    append_to_response: 'movies',\n    language: 'en-US',\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}?${params}`);\n  return data;\n}\n\nexport async function fetchMovieCast(id) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${CAST}?${params}`);\n  return data;\n}\n\nexport async function fetchMovieRewiews(id, page = 1) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${REWIEWS}?${params}`);\n  return data;\n}\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieInfo_item__ZxVDU\",\"item_img\":\"MovieInfo_item_img__iM-TF\",\"item_description\":\"MovieInfo_item_description__9+zSH\"};","import defaultPoster from '../images/no_poster.jpg';\nimport css from './MovieInfo.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieInfo = ({ movie }) => {\n  const { poster_path, genres, homepage, overview, title, vote_average } = movie;\n  return (\n    <div className={css.item}>\n      <img\n        className={css.item_img}\n        src={poster_path ? `https://image.tmdb.org/t/p/w300/${poster_path}` : defaultPoster}\n        alt={title}\n        loading=\"lazy\"\n      />\n      <div className={css.item_description}>\n        <h2>{title}</h2>\n        <h3>Overwiew</h3>\n        <p>{overview}</p>\n        <p>Rate: {vote_average.toFixed(1)}</p>\n        <h3>Genres</h3>\n        <ul>\n          <li key={'genres'}>{genres?.map(genre => genre.name).join(', ')}</li>\n        </ul>\n        {homepage && (\n          <a href={homepage} target=\"_blank\" rel=\"noreferrer\">\n            <p>Official page</p>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  genres: PropTypes.array,\n  title: PropTypes.string,\n  poster_path: PropTypes.string,\n  vote_average: PropTypes.number,\n  homepage: PropTypes.string,\n  overview: PropTypes.string,\n};\nexport default MovieInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"back\":\"MovieDetails_back__Jj+0O\",\"links\":\"MovieDetails_links__EzCWB\",\"link_item\":\"MovieDetails_link_item__u9S5O\"};","import Movie from 'components/MovieInfo/MovieInfo';\nimport { fetchMovie } from 'components/services/moviesAPI/fetchMovies';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { STATUS } from 'components/services/moviesAPI/status';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef([location.state?.from || '/']);\n\n  useEffect(() => {\n    if (!location.state) {\n      return;\n    }\n    if (backLink.current[backLink.current.length - 1] !== location.state.from) {\n      backLink.current.push(location.state.from);\n    }\n  }, [location]);\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    async function getMovie() {\n      try {\n        const movie = await fetchMovie(movieId);\n        setMovie(movie);\n        setStatus(STATUS.RESOLVED);\n      } catch (err) {\n        setStatus(STATUS.REJECTED);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  const reduceLocation = () => {\n    backLink.current.pop();\n  };\n\n  if (status === STATUS.RESOLVED) {\n    return (\n      <div className={css.container}>\n        <Link to={backLink.current[backLink.current.length - 1]} onClick={reduceLocation}>\n          <button className={css.back}>back</button>\n        </Link>\n        <Movie movie={movie} />\n        <div className={css.links}>\n          <Link className={css.link_item} to=\"cast\">\n            <h2>Cast</h2>\n          </Link>\n          <Link className={css.link_item} to=\"rewiews\">\n            <h2>Rewiews</h2>\n          </Link>\n        </div>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    );\n  } else if (status === STATUS.PENDING) {\n    return <Loader />;\n  } else if (status === STATUS.REJECTED) {\n    return <p>Something went wrong...</p>;\n  }\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","TRENDS","SEARCH","MOVIE","CAST","REWIEWS","fetchTrendingMovies","page","params","URLSearchParams","language","api_key","axios","data","fetchSearchMovie","searchText","query","fetchMovie","id","append_to_response","fetchMovieCast","fetchMovieRewiews","STATUS","IDLE","PENDING","REJECTED","RESOLVED","movie","poster_path","genres","homepage","overview","title","vote_average","className","css","src","defaultPoster","alt","loading","toFixed","map","genre","name","join","href","target","rel","useState","setMovie","status","setStatus","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","current","length","push","getMovie","to","onClick","pop","Suspense","fallback","Loader"],"sourceRoot":""}