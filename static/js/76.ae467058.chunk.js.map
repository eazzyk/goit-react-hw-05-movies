{"version":3,"file":"static/js/76.ae467058.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/services/fetchMovies.js","components/services/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__iz+ye\",\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"img\":\"Cast_img__-isbW\",\"name\":\"Cast_name__6UbFm\"};","import { useParams } from 'react-router-dom';\nimport { STATUS } from '../services/status';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCast } from 'components/services/fetchMovies';\nimport Loader from 'components/Loader/Loader';\nimport defaultPoster from '../images/no_poster.jpg';\nimport css from './Cast.module.css';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    async function getMovieCast() {\n      try {\n        const res = await fetchMovieCast(movieId);\n        setCast(res.cast);\n        setStatus(STATUS.RESOLVED);\n      } catch (err) {\n        setStatus(STATUS.REJECTED);\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  if (status === STATUS.PENDING) {\n    return <Loader />;\n  } else if (status === STATUS.RESOLVED) {\n    return (\n      <div className={css.container}>\n        <h2>Cast</h2>\n        {cast.length > 0 ? (\n          <ul className={css.list}>\n            {cast?.map(({ id, profile_path, name, character }) => (\n              <li className={css.item} key={id}>\n                <img\n                  className={css.img}\n                  src={\n                    profile_path ? `https://image.tmdb.org/t/p/w300/${profile_path}` : defaultPoster\n                  }\n                  alt={name}\n                  loading=\"lazy\"\n                />\n                {name && <p className={css.name}>Name: {name}</p>}\n                {character && <p className={css.name}>Character: {character}</p>}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>no cast list</p>\n        )}\n      </div>\n    );\n  } else if (status === STATUS.REJECTED) {\n    return <p>Something went wrong</p>;\n  }\n};\n\nCast.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b0417ce4f13258c76c4f7fdc636d5dbb';\nconst TRENDS = '/trending/movie/week';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/';\nconst CAST = '/credits';\nconst REWIEWS = '/reviews';\n\n// https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchTrendingMovies(page = 1) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${TRENDS}?${params}`);\n  return data;\n}\n\n// https://api.themoviedb.org/3/search/movie?query=memo&include_adult=true&language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchSearchMovie(searchText, page = 1) {\n  const params = new URLSearchParams({\n    query: searchText,\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${SEARCH}?${params}`);\n  return data;\n}\n\n// https://api.themoviedb.org/3/movie/113072?append_to_response=movies&language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovie(id) {\n  const params = new URLSearchParams({\n    append_to_response: 'movies',\n    language: 'en-US',\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}?${params}`);\n  return data;\n}\n\n// https://api.themoviedb.org/3/movie/113072/credits?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovieCast(id) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${CAST}?${params}`);\n  return data;\n}\n\n// https://api.themoviedb.org/3/movie/484089/reviews?language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\n\nexport async function fetchMovieRewiews(id, page = 1) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${REWIEWS}?${params}`);\n  return data;\n}\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n"],"names":["useState","cast","setCast","STATUS","status","setStatus","movieId","useParams","useEffect","fetchMovieCast","res","getMovieCast","Loader","className","css","length","map","id","profile_path","name","character","src","defaultPoster","alt","loading","BASE_URL","API_KEY","TRENDS","SEARCH","MOVIE","CAST","REWIEWS","fetchTrendingMovies","page","params","URLSearchParams","language","api_key","axios","data","fetchSearchMovie","searchText","query","fetchMovieRewiews","IDLE","PENDING","REJECTED","RESOLVED"],"sourceRoot":""}