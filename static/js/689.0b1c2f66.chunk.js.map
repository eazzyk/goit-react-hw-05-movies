{"version":3,"file":"static/js/689.0b1c2f66.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/services/moviesAPI/fetchMovies.js","components/services/moviesAPI/status.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__list\":\"MoviesList_movie__list__7GXDl\",\"movie__item\":\"MoviesList_movie__item__ZR78F\",\"list__title\":\"MoviesList_list__title__R5pRk\"};","import { useLocation, Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  if (!movies) {\n    return null;\n  }\n  return (\n    <ul className={css.movie__list}>\n      {movies.map(\n        ({ id, title, poster_path }) =>\n          title && (\n            <li className={css.movie__item} key={id}>\n              <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={\n                    poster_path\n                      ? 'https://image.tmdb.org/t/p/w300' + poster_path\n                      : 'https://via.placeholder.com/300x450'\n                  }\n                  width={300}\n                  height={450}\n                  alt={title}\n                />\n                <h2 className={css.list__title}>{title}</h2>\n              </Link>\n            </li>\n          )\n      )}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\n/*\n */\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b0417ce4f13258c76c4f7fdc636d5dbb';\nconst TRENDS = '/trending/movie/week';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/';\nconst CAST = '/credits';\nconst REWIEWS = '/reviews';\n\n// https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchTrendingMovies(page = 1) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${TRENDS}?${params}`);\n  return data;\n}\n\n// https://api.themoviedb.org/3/search/movie?query=memo&include_adult=true&language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchSearchMovie(searchText, page = 1) {\n  const params = new URLSearchParams({\n    query: searchText,\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${SEARCH}?${params}`);\n  return data;\n}\n\n// https://api.themoviedb.org/3/movie/113072?append_to_response=movies&language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovie(id) {\n  const params = new URLSearchParams({\n    append_to_response: 'movies',\n    language: 'en-US',\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}?${params}`);\n  return data;\n}\n\n// https://api.themoviedb.org/3/movie/113072/credits?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovieCast(id) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${CAST}?${params}`);\n  return data;\n}\n\n// https://api.themoviedb.org/3/movie/484089/reviews?language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\n\nexport async function fetchMovieRewiews(id, page = 1) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${REWIEWS}?${params}`);\n  return data;\n}\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"input\":\"SearchBar_input__bIy50\",\"btn\":\"SearchBar_btn__PKGSc\"};","import { useState } from 'react';\nimport css from './SearchBar.module.css';\n\nconst SearchBar = ({ handleSearch }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = evt => {\n    setValue(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    if (value.trim() === '') {\n      alert('Empty field!');\n      return;\n    }\n    evt.preventDefault();\n    handleSearch(value);\n    setValue('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        onChange={handleChange}\n        value={value}\n      />\n      <button className={css.btn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\"};","import SearchBar from 'components/SearchBar/SearchBar';\nimport { fetchSearchMovie } from 'components/services/moviesAPI/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { STATUS } from 'components/services/moviesAPI/status';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [results, setResults] = useState(null);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    async function getMovies() {\n      try {\n        setStatus(STATUS.PENDING);\n        const movies = await fetchSearchMovie(query);\n\n        if (movies.results.length > 0) {\n          setStatus(STATUS.RESOLVED);\n          setResults(movies.results);\n        } else {\n          setResults([]);\n        }\n      } catch (err) {\n        setStatus(STATUS.REJECTED);\n      }\n    }\n    getMovies();\n  }, [query]);\n\n  const handleSearch = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <div className={css.container}>\n      <SearchBar handleSearch={handleSearch} />\n      {status === STATUS.PENDING && <Loader />}\n      <MoviesList movies={results} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","className","css","map","id","title","poster_path","to","state","from","src","width","height","alt","BASE_URL","API_KEY","TRENDS","SEARCH","MOVIE","CAST","REWIEWS","fetchTrendingMovies","page","params","URLSearchParams","language","api_key","axios","data","fetchSearchMovie","searchText","query","fetchMovie","append_to_response","fetchMovieCast","fetchMovieRewiews","STATUS","IDLE","PENDING","REJECTED","RESOLVED","handleSearch","useState","value","setValue","onSubmit","evt","trim","preventDefault","alert","type","autoComplete","autoFocus","placeholder","onChange","target","results","setResults","status","setStatus","useSearchParams","searchParams","setSearchParams","get","useEffect","length","getMovies","Loader","MoviesList"],"sourceRoot":""}