{"version":3,"file":"static/js/168.8c3c232e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/services/moviesAPI/fetchMovies.js","components/services/moviesAPI/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\",\"list\":\"Reviews_list__okdpy\",\"text\":\"Reviews_text__EqLvx\"};","import { useParams } from 'react-router-dom';\nimport { STATUS } from 'components/services/moviesAPI/status';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieRewiews } from 'components/services/moviesAPI/fetchMovies';\nimport Loader from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [results, setReviews] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    async function getMovieReviews() {\n      try {\n        const res = await fetchMovieRewiews(movieId);\n        setReviews(res.results);\n        setStatus(STATUS.RESOLVED);\n      } catch (err) {\n        setStatus(STATUS.REJECTED);\n      }\n    }\n    getMovieReviews();\n  }, [movieId]);\n\n  if (status === STATUS.PENDING) {\n    return <Loader />;\n  } else if (status === STATUS.RESOLVED) {\n    return (\n      <div className={css.container}>\n        <h2>Rewiews</h2>\n        {results.length > 0 ? (\n          <ul className={css.list}>\n            {results?.map(({ id, author, content }) => (\n              <li key={id}>\n                {author && <h3>Author: {author}</h3>}\n                {content && <p className={css.text}> {content}</p>}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>no rewiews list</p>\n        )}\n      </div>\n    );\n  } else if (status === STATUS.REJECTED) {\n    return <p>Something went wrong</p>;\n  }\n};\n\nReviews.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b0417ce4f13258c76c4f7fdc636d5dbb';\nconst TRENDS = '/trending/movie/week';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/';\nconst CAST = '/credits';\nconst REWIEWS = '/reviews';\n\nexport async function fetchTrendingMovies(page = 1) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${TRENDS}?${params}`);\n  return data;\n}\n\nexport async function fetchSearchMovie(searchText, page = 1) {\n  const params = new URLSearchParams({\n    query: searchText,\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${SEARCH}?${params}`);\n  return data;\n}\nexport async function fetchMovie(id) {\n  const params = new URLSearchParams({\n    append_to_response: 'movies',\n    language: 'en-US',\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}?${params}`);\n  return data;\n}\n\nexport async function fetchMovieCast(id) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${CAST}?${params}`);\n  return data;\n}\n\nexport async function fetchMovieRewiews(id, page = 1) {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    page: page,\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${REWIEWS}?${params}`);\n  return data;\n}\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n"],"names":["useState","results","setReviews","STATUS","status","setStatus","movieId","useParams","useEffect","fetchMovieRewiews","res","getMovieReviews","Loader","className","css","length","map","id","author","content","BASE_URL","API_KEY","TRENDS","SEARCH","MOVIE","CAST","REWIEWS","fetchTrendingMovies","page","params","URLSearchParams","language","api_key","axios","data","fetchSearchMovie","searchText","query","fetchMovie","append_to_response","fetchMovieCast","IDLE","PENDING","REJECTED","RESOLVED"],"sourceRoot":""}